buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$JUNIT_PLATFORM"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'org.junit.platform.gradle.plugin'

group "ca.allanwang.mcgill"
version VERSION

repositories {
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "https://jitpack.io" }
    mavenCentral()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

test {
    useJUnitPlatform()
    dependsOn cleanTest
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN"
    implementation "com.github.AllanWang:Exposed:$EXPOSED"
    implementation "com.graphql-java:graphql-java:$GRAPHQL"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$KOTLIN"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$JUNIT"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$JUNIT"
}

compileKotlin {
    kotlinOptions.jvmTarget = JVM_VERSION
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JVM_VERSION
}